name: "Red1"

layer {
  name: 'data'
  type: 'Python'
  top: 'data'
  top: 'rois'
  top: 'labels'
  include {
    phase: TRAIN
  }
  python_param {
    module: 'capa_datos'
    layer: 'CapaDatos'
    param_str: "'conjunto': Train" #nombre del archivo Train.txt
  }
}

layer {
  name: 'data'
  type: 'Python'
  top: 'data'
  top: 'rois'
  top: 'labels'
  include {
    phase: TEST
  }
  python_param {
    module: 'capa_datos'
    layer: 'CapaDatos'
    param_str: "'conjunto': Test" #nombre del archivo Test.txt
  }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }

  convolution_param {
    num_output: 50
    kernel_size: 5
    pad: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "relu1"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "relu1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    pad: 1
    stride: 2
  }
}

# layer {
#   name: "norm1"
#   type: "LRN"
#   bottom: "pool1"
#   top: "pool1"
#   lrn_param {
#     local_size: 3
#     alpha: 0.1
#     beta: 0.75
#   }
# }

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 3
    pad: 1
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "relu2"
}

layer {
  name: "roi_pool2"
  type: "ROIPooling"
  bottom: "relu2"
  bottom: "rois"
  top: "pool2"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.25 # 1/4
  }
}

layer {
  name: "fc"
  type: "InnerProduct"
  bottom: "pool2"
  top: "fc"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
# cambie 500 por 1024
layer {
  name: "relufc"
  type: "ReLU"
  bottom: "fc"
  top: "fc"
}

layer {
  name: "drop1"
  type: "Dropout"
  bottom: "fc"
  top: "fc"
  dropout_param {
    dropout_ratio: 0.4
  }
}

layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "fc"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "labels"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "labels"
  top: "loss"
}
